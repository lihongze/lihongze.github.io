<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo搭建-环境准备</title>
      <link href="hexo%E6%90%AD%E5%BB%BA-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87.html"/>
      <url>hexo%E6%90%AD%E5%BB%BA-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87.html</url>
      
        <content type="html"><![CDATA[<h1 id="本机安装node-js-git"><a href="#本机安装node-js-git" class="headerlink" title="本机安装node.js+git"></a>本机安装node.js+git</h1><h2 id="node-js安装"><a href="#node-js安装" class="headerlink" title="node.js安装"></a>node.js安装</h2><blockquote><p>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。</p></blockquote><p>下载地址：<a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a><br>下载完成后，双击安装，一路next到结束，安装完成后 按下<code>win + R</code> 键，输入cmd 回车，打开windows命令台，输入<br><code>node -v</code><br><code>npm -v</code><br>出现以下内容说明安装成功<br><img src="http://qmr2rw99s.hd-bkt.clouddn.com/img.png" alt="img.png"></p><h2 id="git安装"><a href="#git安装" class="headerlink" title="git安装"></a>git安装</h2><blockquote><p>维基词条:git 是一个分布式版本控制软件，最初由林纳斯·托瓦兹创作，于2005年以GPL发布。最初目的是为更好地管理Linux内核开发而设计。应注意的是，这与GNU Interactive Tools（一个类似Norton Commander界面的文件管理器）不同。<br>git最初的开发动力来自于BitKeeper和Monotone。git最初只是作为一个可以被其他前端（比如Cogito或Stgit）包装的后端而开发的，但后来git内核已经成熟到可以独立地用作版本控制。很多著名的软件都使用git进行版本控制，其中包括Linux内核、X.Org服务器和OLPC内核等项目的开发流程。</p></blockquote><p>下载地址：<a href="https://www.git-scm.com/download/win">https://www.git-scm.com/download/win</a><br>安装完成后，打开cmd命令行输入<br><code>git --version</code><br>出现以下内容说明安装成功<br><img src="http://qmr2rw99s.hd-bkt.clouddn.com/img_1.png" alt="img_1.png"></p><h2 id="注册Github账号"><a href="#注册Github账号" class="headerlink" title="注册Github账号"></a>注册Github账号</h2><blockquote><p>GitHub是通过Git进行版本控制的软件源代码托管服务平台，由GitHub公司（曾称Logical Awesome）的开发者Chris Wanstrath、PJ Hyett和Tom Preston-Werner使用Ruby on Rails编写而成。它以各种不同的编程语言托管您的源代码项目，并跟踪每次迭代所做的各种更改。</p></blockquote><p>接下来我们需要创建一个github账号，访问<a href="https://github.com/">https://github.com/</a>github官网注册账号登陆后，新建一个项目<br><img src="http://qmr2rw99s.hd-bkt.clouddn.com/img_3.png" alt="img_3.png"><br>然后完善项目信息，如下：<br><img src="http://qmr2rw99s.hd-bkt.clouddn.com/img_4.png" alt="img_4.png"><br>这里Repository name 爆红是我已创建过相同名称的项目，不用管，然后选择项目的setting配置，如下图：<br><img src="http://qmr2rw99s.hd-bkt.clouddn.com/img_5.png" alt="img_5.png"><br>拉到最下面，找到<code>GitHub Pages</code>，点击<code>Choose a theme</code>选择一个主题。过一会之后再回到GitHub Pages，看到如下内容说明设置成功：<br><img src="http://qmr2rw99s.hd-bkt.clouddn.com/img_6.png" alt="img_6.png"><br>此时我们访问图中链接，已经可以正常访问啦，然后记录下我们项目的git ssh地址，后面和本地git打通要用到，git ssh地址如下图：<br><img src="http://qmr2rw99s.hd-bkt.clouddn.com/img_7.png" alt="img_7.png">  </p><h2 id="github配置本地密钥"><a href="#github配置本地密钥" class="headerlink" title="github配置本地密钥"></a>github配置本地密钥</h2><p>打开我的电脑，右键空白处，选择 <code>Git Bash Here</code>,打开git命令窗口，输入以下命令配置你的github信息：   </p><pre><code>git config --global user.name &quot;xxxxx&quot;git config --global user.email &quot;xxxxxx@qq.com&quot;</code></pre><p>用户名邮箱为你注册github的用户名和邮箱，接下来创建本地ssh密钥，输入以下命令：<br><code>ssh-keygen -t rsa -C &quot;xxxxxx@qq.com&quot;</code><br>然后访问本机C:\Users\你的本机用户名  找到.ssh文件夹，会生成如下密钥文件：<br><img src="http://qmr2rw99s.hd-bkt.clouddn.com/img_8.png" alt="img_8.png"><br>复制<code>id_rsa.pub</code>文件中的内容，打开github，<br><img src="http://qmr2rw99s.hd-bkt.clouddn.com/img_9.png" alt="img_9.png"><br><img src="http://qmr2rw99s.hd-bkt.clouddn.com/img_10.png" alt="img_10.png"><br><img src="http://qmr2rw99s.hd-bkt.clouddn.com/img_11.png" alt="img_11.png"><br>密钥设置成功后，在git命令台输入<br><code>ssh -T git@github.com</code><br>出现你的名字，说明设置成功，至此，hexo+github搭建博客的前置环境我们就全部完成啦，后续搭建教程 <a href="/2021/01/06/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/">看这里</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何使用hexo+github搭建自己的博客系统</title>
      <link href="%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F.html"/>
      <url>%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F.html</url>
      
        <content type="html"><![CDATA[<h1 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h1><ol><li>新建github账号+项目(（) <a href="/2021/01/06/hexo%E6%90%AD%E5%BB%BA-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/">教程点这里</a> )   </li><li>本机需要装好node.js + git ( <a href="/2021/01/06/hexo%E6%90%AD%E5%BB%BA-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/">教程点这里</a> )   </li><li>写文章需要用到markdown编辑器( <a href="https://blog.csdn.net/davidhzq/article/details/100815332">编辑器推荐</a> )   </li></ol><h1 id="开始构建"><a href="#开始构建" class="headerlink" title="开始构建"></a>开始构建</h1><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p> 在本机新建一个文件夹来存放博客文件，比如我在d盘新建了D:\study\blog目录（以下统称为博客根目录），进入该目录，右键点击空白处，选择<br> <code>Git Bash Here</code><br> 来打开git命令窗口（安装以及后续所有操作都使用git命令台），输入<br> <code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code><br> 回车，安装cnpm，因为国内网络受限，这里我们使用阿里云镜像来执行后续安装,( <a href="https://www.cnblogs.com/lichaoqing/p/5678595.html">理由</a>  )<br> 命令执行完后，继续执行<br> <code>npm install -g hexo-cli</code><br> 安装hexo之后，执行<br> <code>hexo -v</code><br> 来验证hexo是否安装成功，接下来就要初始化hexo文件，执行<br> <code>hexo init</code><br> 初始化成功后会发现当前目录下多了很多hexo的文件，继续执行<br> <code>cnpm install</code><br> 安装必备组件，至此，本地博客系统已经搭建完毕了，接下来输入<br> <code>hexo g</code> 生成静态网页<br> <code>hexo s</code> 启动本地hexo博客<br> 看到没有报错，并出现<code> Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</code>该提示，说明本地博客启动成功<br> 访问<code>localhost:4000</code> 即可访问我们的本地博客系统啦(<code>ctrl + c</code>关闭本地博客系统))</p><h2 id="将本地博客部署到github"><a href="#将本地博客部署到github" class="headerlink" title="将本地博客部署到github"></a>将本地博客部署到github</h2><p> 打开我们hexo的安装目录，我的是D:\study\blog，修改<code>_config.yml</code> 最后一行的配置，  </p><pre><code>deploy:      type: git      repository: git@github.com:lihongze/lihongze.github.io.git（这里要改成自己的链接）      branch: master</code></pre><p> 修改保存后，我们就可以讲本地博客系统提交到github啦，但是在提交之前，需要先安装一个部署插件，在git命令台输入<br> <code>cnpm install hexo-deployer-git --save</code><br> 安装完成后，输入<br> <code>hexo d</code><br> 部署到github，然后我们就可以通过<code>https://lihongze.github.io</code>来访问自己的博客系统了   </p><h1 id="其他功能"><a href="#其他功能" class="headerlink" title="其他功能"></a>其他功能</h1><h2 id="设置主题"><a href="#设置主题" class="headerlink" title="设置主题"></a>设置主题</h2><p> 我这里选用的是next主题，在本地博客目录下，右键打开git命令控制台，输入<br> <code> git clone https://github.com/iissnan/hexo-theme-next.git themes/next</code><br> 安装next主题 至 本地themes文件夹下，修改博客根目录下<code>_config.yml</code> 中 theme配置项为<code>theme: next</code><br> 然后在git 命令台顺序执行<br> <code>hexo clean</code>(清理hexo缓存)<br> <code>hexo g</code><br> <code>hexo s</code><br> 访问<code>localhost:4000/</code>即可查看效果，更多next主题优化 <a href="https://zhuanlan.zhihu.com/p/30836436">点这里</a></p><h2 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h2><p> 在本地博客根目录下执行<code>hexo new post &quot;你的文章名&quot;</code> 来创建本地文章，执行完之后会在博客根目录下，<code>source\_posts</code>目录下<br> 生成<code>你的文章名.md</code>文件，使用任意文本编辑器打开你刚新建的.md文章源文件,即可开始编辑，markdown语法参考 <a href="http://xianbai.me/learn-md/article/about/readme.html">点这里</a></p><h1 id="常见问题解决"><a href="#常见问题解决" class="headerlink" title="常见问题解决"></a>常见问题解决</h1><h2 id="问题：文章目录点击无法跳转"><a href="#问题：文章目录点击无法跳转" class="headerlink" title=" 问题：文章目录点击无法跳转"></a> 问题：文章目录点击无法跳转</h2><p> <a href="https://www.cnblogs.com/Createsequence/p/14150758.html">解决方案点这里</a></p><h2 id="问题：文章目录只展示了一级标题，不展示二级标题"><a href="#问题：文章目录只展示了一级标题，不展示二级标题" class="headerlink" title=" 问题：文章目录只展示了一级标题，不展示二级标题  "></a> 问题：文章目录只展示了一级标题，不展示二级标题  </h2><p> 解决方案：打开themes/next/source/css/_custom/custom.styl 文件，在最后添加以下内容即可</p><pre><code>//文章目录默认展开.post-toc .nav .nav-child &#123; display: block; &#125;</code></pre><h2 id="问题：文章引用本地图片无法展示"><a href="#问题：文章引用本地图片无法展示" class="headerlink" title=" 问题：文章引用本地图片无法展示"></a> 问题：文章引用本地图片无法展示</h2><p> 解决方案： 在hexo根目录下打开git控制台，输入<br> <code>npm install https://github.com/7ym0n/hexo-asset-image --save</code><br> 装这个插件，后续再通过<code>hexo new post &quot;文章名&quot;</code> 创建文章会发现之前存放文章的目录下会多一个与文章名一样的文件夹，文章相关的图片等静态资源会默认存放在这个文件夹内，然后我们在文章中就可以通过<br> <code>![img_9.png](img_9.png)</code><br> 这种格式来引用本地图片啦，那针对你装这个插件之前的文章，你可以手动在文章目录（hexo根目录/source/_posts/）下创建与文章名一样的文件夹，然后将文章相关图片剪切进去就可以啦</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
